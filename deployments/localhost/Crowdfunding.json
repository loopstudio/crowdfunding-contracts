{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_maxCampaignDurationInDays",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Cancel",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "goal",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "startDate",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "endDate",
          "type": "uint64"
        }
      ],
      "name": "Launch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "pledger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Pledge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Refund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "pledger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Unpledge",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_campaignId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_campaignId",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idsToCampaigns",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pledgedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "startDate",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "endDate",
          "type": "uint64"
        },
        {
          "internalType": "enum Crowdfunding.CampaignStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "idsToPledgedAmountByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_startDate",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "_endDate",
          "type": "uint64"
        }
      ],
      "name": "launch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxCampaignDurationInDays",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_campaignId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "pledge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_campaignId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unpledge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x09b72664e1419b7074dbab99b6e9c0d28da4a298804834ca0848507c53b4549f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "2008652",
    "logsBloom": "0x
    "blockHash": "0x51a2a77484f311646adcce3fd78c70a4cc3893942613f43601c89d7a8f5bf7b7",
    "transactionHash": "0x09b72664e1419b7074dbab99b6e9c0d28da4a298804834ca0848507c53b4549f",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "2008652",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    1728000
  ],
  "numDeployments": 1,
  "solcInputHash": "3296082ffb5d9c7235e929865aab940f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_maxCampaignDurationInDays\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startDate\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endDate\",\"type\":\"uint64\"}],\"name\":\"Launch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pledger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Pledge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pledger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unpledge\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idsToCampaigns\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pledgedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"startDate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endDate\",\"type\":\"uint64\"},{\"internalType\":\"enum Crowdfunding.CampaignStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"idsToPledgedAmountByAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_startDate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_endDate\",\"type\":\"uint64\"}],\"name\":\"launch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCampaignDurationInDays\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"pledge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unpledge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@loopstudio\",\"details\":\"Contract that enables to raise funds using ERC20 tokens. campaigns pledged amount can be claimed if\",\"events\":{\"Cancel(uint256)\":{\"details\":\"Event emited when Campaign cancelation succeeds\"},\"Launch(uint256,uint256,address,uint64,uint64)\":{\"details\":\"Event emited when Campaign launch succeeds\"}},\"kind\":\"dev\",\"methods\":{\"cancel(uint256)\":{\"details\":\"Cancels a campaign, changing the status to Canceled and emits a Cancel event.\",\"params\":{\"_campaignId\":\"id of the campaign to cancel\"}},\"claim(uint256)\":{\"details\":\"Claims a campaign, changing the status to Claimed and emits a Claim event. Perform a safeTransfer to the campaing's creator.\",\"params\":{\"_campaignId\":\"id of the campaign to claim.\"}},\"constructor\":{\"details\":\"Contract constructor\",\"params\":{\"_maxCampaignDurationInDays\":\"timestamp that represents the max duration for a campaign.\",\"_token\":\"ERC20 token address\"}},\"pledge(uint256,uint256)\":{\"params\":{\"_amount\":\"the amount to pledge\",\"_campaignId\":\"id of the campaign pledge\"}},\"unpledge(uint256,uint256)\":{\"details\":\"Unpledge contribution made to a campaign if not ended. Perform a SafeER20.transferFrom. Emit a Unpledge event if succeed.\",\"params\":{\"_amount\":\"the amount to unpledge\",\"_campaignId\":\"id of the campaign to unpledge\"}}},\"stateVariables\":{\"idCounter\":{\"details\":\"Counter for storage of campaign ids\"},\"idsToCampaigns\":{\"details\":\"Mapping that stores the campaigns by their id\"},\"idsToPledgedAmountByAddress\":{\"details\":\"Mapping that stores by campaingId, the amount pledged by address. Id -> pledger -> amount\"},\"maxCampaignDurationInDays\":{\"details\":\"timestamp = that represents the max duration for a campaign. I.e 60 days\"},\"tokenAddress\":{\"details\":\"Token must be ERC20 compliant\"}},\"title\":\"Crowdfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancel(uint256)\":{\"notice\":\"Cancels a campaign\"},\"claim(uint256)\":{\"notice\":\"Claims the campaign's pledged amount.\"},\"tokenAddress()\":{\"notice\":\"Token address in which funds will be raised for each campaign\"},\"unpledge(uint256,uint256)\":{\"notice\":\"Unpledge contribution to campaign\"}},\"notice\":\"Contract for campaigns fundraising\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Crowdfunding.sol\":\"Crowdfunding\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"contracts/Crowdfunding.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\n\\n/// @title Crowdfunding\\n/// @author @loopstudio\\n/// @notice Contract for campaigns fundraising\\n/// @dev Contract that enables to raise funds using ERC20 tokens. campaigns pledged amount can be claimed if\\n//  goal is met on the defined period of time. Otherwhise, the funds should be refunded.\\ncontract Crowdfunding {\\n    /// @dev Using SafeERC20 to eliminates the need to handle boolean return values for ERC20 methods (i.e transfer)\\n    using SafeERC20 for IERC20;\\n    /// @dev Using Counters to restrict id increments by 1\\n    using Counters for Counters.Counter;\\n\\n    /// @dev Event emited when Campaign launch succeeds\\n    event Launch(\\n        uint256 id,\\n        uint256 goal,\\n        address indexed creator,\\n        uint64 startDate,\\n        uint64 endDate\\n    );\\n\\n    /// @dev Event emited when Campaign cancelation succeeds\\n    event Cancel(uint256 id);\\n    // @dev Event emited when Campaign receives a contribution\\n    event Pledge(uint256 id, address indexed pledger, uint256 amount);\\n    // @dev Event emited when pledger withdraw a contribution\\n    event Unpledge(uint256 id, address indexed pledger, uint256 amount);\\n    // @dev Event emited when creator executes the claim\\n    event Claim(uint256 id, address indexed creator, uint256 amount);\\n    event Refund();\\n\\n    /// @dev Status of a campaign. Note: Refunded status is not represented since the need of\\n    // keeping track of how many bakers are left to refund (gas consuming) and it doesnt bring any\\n    // adventage/ussage\\n    enum CampaignStatus {\\n        Created,\\n        Canceled,\\n        Claimed\\n    }\\n\\n    /// @notice object that reprents a campaign\\n    struct Campaign {\\n        address creator;\\n        uint256 goalAmount;\\n        uint256 pledgedAmount;\\n        uint64 startDate;\\n        uint64 endDate;\\n        CampaignStatus status;\\n    }\\n\\n    /// @notice Token address in which funds will be raised for each campaign\\n    /// @dev Token must be ERC20 compliant\\n    address public immutable tokenAddress;\\n    /// @dev Counter for storage of campaign ids\\n    Counters.Counter private idCounter;\\n    /// @dev Mapping that stores the campaigns by their id\\n    mapping(uint256 => Campaign) public idsToCampaigns;\\n    /// @dev Mapping that stores by campaingId, the amount pledged by address. Id -> pledger -> amount\\n    mapping(uint256 => mapping(address => uint256))\\n        public idsToPledgedAmountByAddress;\\n    /// @dev timestamp = that represents the max duration for a campaign. I.e 60 days\\n    uint64 public immutable maxCampaignDurationInDays;\\n\\n    /// @dev Contract constructor\\n    /// @param _token ERC20 token address\\n    /// @param _maxCampaignDurationInDays timestamp that represents the max duration for a campaign.\\n    constructor(address _token, uint64 _maxCampaignDurationInDays) {\\n        require(_token != address(0), \\\"ERC20 address cannot be zero\\\");\\n        require(\\n            _maxCampaignDurationInDays > 0,\\n            \\\"Duration must be gt than zero\\\"\\n        );\\n\\n        tokenAddress = _token;\\n        maxCampaignDurationInDays = _maxCampaignDurationInDays;\\n    }\\n\\n    function launch(\\n        uint256 _goalAmount,\\n        uint64 _startDate,\\n        uint64 _endDate\\n    ) external {\\n        require(_goalAmount > 0, \\\"Goal must be gt 0\\\");\\n        require(_startDate >= block.timestamp, \\\"Start must be gte now\\\");\\n        require(_endDate > _startDate, \\\"End date must be gt start date\\\");\\n        require(\\n            _endDate - _startDate <= maxCampaignDurationInDays,\\n            \\\"Duration exceeds maximum\\\"\\n        );\\n\\n        idCounter.increment();\\n        uint256 campaignId = idCounter.current();\\n\\n        idsToCampaigns[campaignId] = Campaign({\\n            creator: msg.sender,\\n            goalAmount: _goalAmount,\\n            pledgedAmount: 0,\\n            startDate: _startDate,\\n            endDate: _endDate,\\n            status: CampaignStatus.Created\\n        });\\n\\n        emit Launch(campaignId, _goalAmount, msg.sender, _startDate, _endDate);\\n    }\\n\\n    /// @notice Cancels a campaign\\n    /// @dev Cancels a campaign, changing the status to Canceled and emits a Cancel event.\\n    /// @param _campaignId id of the campaign to cancel\\n    function cancel(uint256 _campaignId) external {\\n        Campaign storage campaign = idsToCampaigns[_campaignId];\\n        require(campaign.creator != address(0), \\\"Not exists\\\");\\n        require(campaign.creator == msg.sender, \\\"Not creator\\\");\\n        campaign.status = CampaignStatus.Canceled;\\n        emit Cancel(_campaignId);\\n    }\\n\\n    /// @notice Contribute to campaign\\n    /// @dev Contribute to a campaign if started and not ended. Perform a SafeER20.transferFrom that\\n    // requires previous allowance set. Emmit a Pledge event if succeed.\\n    /// @param _campaignId id of the campaign pledge\\n    /// @param _amount the amount to pledge\\n    function pledge(uint256 _campaignId, uint256 _amount) external {\\n        require(_amount > 0, \\\"Pledge amount must be gt 0\\\");\\n        Campaign storage campaign = idsToCampaigns[_campaignId];\\n        require(campaign.creator != address(0), \\\"Not exists\\\");\\n        require(campaign.status == CampaignStatus.Created, \\\"Invalid status\\\");\\n        require(campaign.startDate <= block.timestamp, \\\"Not started\\\");\\n        require(campaign.endDate > block.timestamp, \\\"Ended\\\");\\n\\n        campaign.pledgedAmount += _amount;\\n        idsToPledgedAmountByAddress[_campaignId][msg.sender] += _amount;\\n\\n        IERC20(tokenAddress).safeTransferFrom(\\n            msg.sender,\\n            address(this),\\n            _amount\\n        );\\n\\n        emit Pledge(_campaignId, msg.sender, _amount);\\n    }\\n\\n    /// @notice Unpledge contribution to campaign\\n    /// @dev Unpledge contribution made to a campaign if not ended. Perform a SafeER20.transferFrom.\\n    /// Emit a Unpledge event if succeed.\\n    /// @param _campaignId id of the campaign to unpledge\\n    /// @param _amount the amount to unpledge\\n    function unpledge(uint256 _campaignId, uint256 _amount) external {\\n        require(_amount > 0, \\\"Unpledge amount must be gt 0\\\");\\n        Campaign storage campaign = idsToCampaigns[_campaignId];\\n        require(campaign.creator != address(0), \\\"Not exists\\\");\\n        require(campaign.endDate > block.timestamp, \\\"Ended\\\");\\n        uint256 pledgerAmount = idsToPledgedAmountByAddress[_campaignId][\\n            msg.sender\\n        ];\\n        require(pledgerAmount >= _amount, \\\"Insufficient balance to unpledge\\\");\\n\\n        campaign.pledgedAmount -= _amount;\\n        idsToPledgedAmountByAddress[_campaignId][msg.sender] -= _amount;\\n\\n        IERC20(tokenAddress).safeTransfer(msg.sender, _amount);\\n\\n        emit Unpledge(_campaignId, msg.sender, _amount);\\n    }\\n\\n    /// @notice Claims the campaign's pledged amount.\\n    /// @dev Claims a campaign, changing the status to Claimed and emits a Claim event.\\n    /// Perform a safeTransfer to the campaing's creator.\\n    /// @param _campaignId id of the campaign to claim.\\n    function claim(uint256 _campaignId) external {\\n        Campaign storage campaign = idsToCampaigns[_campaignId];\\n        require(campaign.creator != address(0), \\\"Not exists\\\");\\n        require(campaign.creator == msg.sender, \\\"Not creator\\\");\\n        require(campaign.pledgedAmount >= campaign.goalAmount, \\\"Goal not reached\\\");\\n        require(campaign.endDate < block.timestamp, \\\"Still active\\\");\\n        require(campaign.status != CampaignStatus.Claimed, \\\"Already claimed\\\");\\n\\n        campaign.status = CampaignStatus.Claimed;\\n\\n        IERC20(tokenAddress).safeTransfer(msg.sender, campaign.pledgedAmount);\\n\\n        emit Claim(_campaignId, msg.sender, campaign.pledgedAmount);\\n    }\\n\\n    function refund() external {}\\n}\\n\",\"keccak256\":\"0x3af3730c65dffc7c11ef150a26d3b0162003eb90b987dbc9e624153645ce62a9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b50604051620026e3380380620026e3833981810160405281019062000037919062000200565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000a9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a090620002a8565b60405180910390fd5b60008167ffffffffffffffff1611620000f9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000f0906200031a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508067ffffffffffffffff1660a08167ffffffffffffffff168152505050506200033c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001838262000156565b9050919050565b620001958162000176565b8114620001a157600080fd5b50565b600081519050620001b5816200018a565b92915050565b600067ffffffffffffffff82169050919050565b620001da81620001bb565b8114620001e657600080fd5b50565b600081519050620001fa81620001cf565b92915050565b600080604083850312156200021a576200021962000151565b5b60006200022a85828601620001a4565b92505060206200023d85828601620001e9565b9150509250929050565b600082825260208201905092915050565b7f455243323020616464726573732063616e6e6f74206265207a65726f00000000600082015250565b600062000290601c8362000247565b91506200029d8262000258565b602082019050919050565b60006020820190508181036000830152620002c38162000281565b9050919050565b7f4475726174696f6e206d757374206265206774207468616e207a65726f000000600082015250565b600062000302601d8362000247565b91506200030f82620002ca565b602082019050919050565b600060208201905081810360008301526200033581620002f3565b9050919050565b60805160a0516123656200037e600039600081816107c30152610de201526000818161047401528181610d2201528181610dbe01526110bc01526123656000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806362048031116100665780636204803114610131578063711853ab146101665780639d76ea58146101825780639dc809e1146101a0578063fde327be146101be5761009e565b8063379607f5146100a357806340e58ee5146100bf5780634e728486146100db578063590e1ae31461010b5780635918245a14610115575b600080fd5b6100bd60048036038101906100b89190611541565b6101da565b005b6100d960048036038101906100d49190611541565b610510565b005b6100f560048036038101906100f091906115cc565b6106b4565b604051610102919061161b565b60405180910390f35b6101136106d9565b005b61012f600480360381019061012a9190611676565b6106db565b005b61014b60048036038101906101469190611541565b610a1f565b60405161015d9695949392919061175e565b60405180910390f35b610180600480360381019061017b91906117bf565b610ab0565b005b61018a610dbc565b60405161019791906117ff565b60405180910390f35b6101a8610de0565b6040516101b5919061181a565b60405180910390f35b6101d860048036038101906101d391906117bf565b610e04565b005b6000600160008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027b90611892565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030d906118fe565b60405180910390fd5b806001015481600201541015610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103589061196a565b60405180910390fd5b428160030160089054906101000a900467ffffffffffffffff1667ffffffffffffffff16106103c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bc906119d6565b60405180910390fd5b6002808111156103d8576103d76116e7565b5b8160030160109054906101000a900460ff1660028111156103fc576103fb6116e7565b5b0361043c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043390611a42565b60405180910390fd5b60028160030160106101000a81548160ff02191690836002811115610464576104636116e7565b5b02179055506104b83382600201547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166111569092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f3ed1528b0fdc7c5207c1bf935e34a667e13656b9ed165260c522be0bc544f303838360020154604051610504929190611a62565b60405180910390a25050565b6000600160008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b190611892565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461064c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610643906118fe565b60405180910390fd5b60018160030160106101000a81548160ff02191690836002811115610674576106736116e7565b5b02179055507f8bf30e7ff26833413be5f69e1d373744864d600b664204b4a2f9844a8eedb9ed826040516106a8919061161b565b60405180910390a15050565b6002602052816000526040600020602052806000526040600020600091509150505481565b565b6000831161071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071590611ad7565b60405180910390fd5b428267ffffffffffffffff16101561076b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076290611b43565b60405180910390fd5b8167ffffffffffffffff168167ffffffffffffffff16116107c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b890611baf565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1682826107f89190611bfe565b67ffffffffffffffff161115610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a90611c86565b60405180910390fd5b61084d60006111dc565b600061085960006111f2565b90506040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001858152602001600081526020018467ffffffffffffffff1681526020018367ffffffffffffffff168152602001600060028111156108c3576108c26116e7565b5b8152506001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060808201518160030160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060a08201518160030160106101000a81548160ff021916908360028111156109bd576109bc6116e7565b5b02179055509050503373ffffffffffffffffffffffffffffffffffffffff167fbc4780dc990db2cd2aeac6bb493759184a77466e5e4478b010d230e98c76553e82868686604051610a119493929190611ca6565b60405180910390a250505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900467ffffffffffffffff16908060030160089054906101000a900467ffffffffffffffff16908060030160109054906101000a900460ff16905086565b60008111610af3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aea90611d37565b60405180910390fd5b6000600160008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9490611892565b60405180910390fd5b428160030160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1611610c01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf890611da3565b60405180910390fd5b60006002600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610c99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9090611e0f565b60405180910390fd5b82826002016000828254610cad9190611e2f565b92505081905550826002600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d149190611e2f565b92505081905550610d6633847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166111569092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f2eeeab891b26a214d1b25749f88a406bdea852bd8c9bfda977e0ef8114c180ba8585604051610dae929190611a62565b60405180910390a250505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008111610e47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3e90611eaf565b60405180910390fd5b6000600160008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610ef1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee890611892565b60405180910390fd5b60006002811115610f0557610f046116e7565b5b8160030160109054906101000a900460ff166002811115610f2957610f286116e7565b5b14610f69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6090611f1b565b60405180910390fd5b428160030160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161115610fce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc590611f87565b60405180910390fd5b428160030160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1611611032576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102990611da3565b60405180910390fd5b818160020160008282546110469190611fa7565b92505081905550816002600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110ad9190611fa7565b925050819055506111013330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611200909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f06bdb975df800a73232998e71ed585d536222f1dfeaa622d7f62a23ada686c828484604051611149929190611a62565b60405180910390a2505050565b6111d78363a9059cbb60e01b8484604051602401611175929190611fdb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611289565b505050565b6001816000016000828254019250508190555050565b600081600001549050919050565b611283846323b872dd60e01b85858560405160240161122193929190612004565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611289565b50505050565b60006112eb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113509092919063ffffffff16565b905060008151111561134b578080602001905181019061130b9190612073565b61134a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134190612112565b60405180910390fd5b5b505050565b606061135f8484600085611368565b90509392505050565b6060824710156113ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a4906121a4565b60405180910390fd5b6113b68561147c565b6113f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ec90612210565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161141e91906122a1565b60006040518083038185875af1925050503d806000811461145b576040519150601f19603f3d011682016040523d82523d6000602084013e611460565b606091505b509150915061147082828661149f565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156114af578290506114ff565b6000835111156114c25782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f6919061230d565b60405180910390fd5b9392505050565b600080fd5b6000819050919050565b61151e8161150b565b811461152957600080fd5b50565b60008135905061153b81611515565b92915050565b60006020828403121561155757611556611506565b5b60006115658482850161152c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115998261156e565b9050919050565b6115a98161158e565b81146115b457600080fd5b50565b6000813590506115c6816115a0565b92915050565b600080604083850312156115e3576115e2611506565b5b60006115f18582860161152c565b9250506020611602858286016115b7565b9150509250929050565b6116158161150b565b82525050565b6000602082019050611630600083018461160c565b92915050565b600067ffffffffffffffff82169050919050565b61165381611636565b811461165e57600080fd5b50565b6000813590506116708161164a565b92915050565b60008060006060848603121561168f5761168e611506565b5b600061169d8682870161152c565b93505060206116ae86828701611661565b92505060406116bf86828701611661565b9150509250925092565b6116d28161158e565b82525050565b6116e181611636565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110611727576117266116e7565b5b50565b600081905061173882611716565b919050565b60006117488261172a565b9050919050565b6117588161173d565b82525050565b600060c08201905061177360008301896116c9565b611780602083018861160c565b61178d604083018761160c565b61179a60608301866116d8565b6117a760808301856116d8565b6117b460a083018461174f565b979650505050505050565b600080604083850312156117d6576117d5611506565b5b60006117e48582860161152c565b92505060206117f58582860161152c565b9150509250929050565b600060208201905061181460008301846116c9565b92915050565b600060208201905061182f60008301846116d8565b92915050565b600082825260208201905092915050565b7f4e6f742065786973747300000000000000000000000000000000000000000000600082015250565b600061187c600a83611835565b915061188782611846565b602082019050919050565b600060208201905081810360008301526118ab8161186f565b9050919050565b7f4e6f742063726561746f72000000000000000000000000000000000000000000600082015250565b60006118e8600b83611835565b91506118f3826118b2565b602082019050919050565b60006020820190508181036000830152611917816118db565b9050919050565b7f476f616c206e6f74207265616368656400000000000000000000000000000000600082015250565b6000611954601083611835565b915061195f8261191e565b602082019050919050565b6000602082019050818103600083015261198381611947565b9050919050565b7f5374696c6c206163746976650000000000000000000000000000000000000000600082015250565b60006119c0600c83611835565b91506119cb8261198a565b602082019050919050565b600060208201905081810360008301526119ef816119b3565b9050919050565b7f416c726561647920636c61696d65640000000000000000000000000000000000600082015250565b6000611a2c600f83611835565b9150611a37826119f6565b602082019050919050565b60006020820190508181036000830152611a5b81611a1f565b9050919050565b6000604082019050611a77600083018561160c565b611a84602083018461160c565b9392505050565b7f476f616c206d7573742062652067742030000000000000000000000000000000600082015250565b6000611ac1601183611835565b9150611acc82611a8b565b602082019050919050565b60006020820190508181036000830152611af081611ab4565b9050919050565b7f5374617274206d75737420626520677465206e6f770000000000000000000000600082015250565b6000611b2d601583611835565b9150611b3882611af7565b602082019050919050565b60006020820190508181036000830152611b5c81611b20565b9050919050565b7f456e642064617465206d75737420626520677420737461727420646174650000600082015250565b6000611b99601e83611835565b9150611ba482611b63565b602082019050919050565b60006020820190508181036000830152611bc881611b8c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c0982611636565b9150611c1483611636565b9250828203905067ffffffffffffffff811115611c3457611c33611bcf565b5b92915050565b7f4475726174696f6e2065786365656473206d6178696d756d0000000000000000600082015250565b6000611c70601883611835565b9150611c7b82611c3a565b602082019050919050565b60006020820190508181036000830152611c9f81611c63565b9050919050565b6000608082019050611cbb600083018761160c565b611cc8602083018661160c565b611cd560408301856116d8565b611ce260608301846116d8565b95945050505050565b7f556e706c6564676520616d6f756e74206d757374206265206774203000000000600082015250565b6000611d21601c83611835565b9150611d2c82611ceb565b602082019050919050565b60006020820190508181036000830152611d5081611d14565b9050919050565b7f456e646564000000000000000000000000000000000000000000000000000000600082015250565b6000611d8d600583611835565b9150611d9882611d57565b602082019050919050565b60006020820190508181036000830152611dbc81611d80565b9050919050565b7f496e73756666696369656e742062616c616e636520746f20756e706c65646765600082015250565b6000611df9602083611835565b9150611e0482611dc3565b602082019050919050565b60006020820190508181036000830152611e2881611dec565b9050919050565b6000611e3a8261150b565b9150611e458361150b565b9250828203905081811115611e5d57611e5c611bcf565b5b92915050565b7f506c6564676520616d6f756e74206d7573742062652067742030000000000000600082015250565b6000611e99601a83611835565b9150611ea482611e63565b602082019050919050565b60006020820190508181036000830152611ec881611e8c565b9050919050565b7f496e76616c696420737461747573000000000000000000000000000000000000600082015250565b6000611f05600e83611835565b9150611f1082611ecf565b602082019050919050565b60006020820190508181036000830152611f3481611ef8565b9050919050565b7f4e6f742073746172746564000000000000000000000000000000000000000000600082015250565b6000611f71600b83611835565b9150611f7c82611f3b565b602082019050919050565b60006020820190508181036000830152611fa081611f64565b9050919050565b6000611fb28261150b565b9150611fbd8361150b565b9250828201905080821115611fd557611fd4611bcf565b5b92915050565b6000604082019050611ff060008301856116c9565b611ffd602083018461160c565b9392505050565b600060608201905061201960008301866116c9565b61202660208301856116c9565b612033604083018461160c565b949350505050565b60008115159050919050565b6120508161203b565b811461205b57600080fd5b50565b60008151905061206d81612047565b92915050565b60006020828403121561208957612088611506565b5b60006120978482850161205e565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006120fc602a83611835565b9150612107826120a0565b604082019050919050565b6000602082019050818103600083015261212b816120ef565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061218e602683611835565b915061219982612132565b604082019050919050565b600060208201905081810360008301526121bd81612181565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006121fa601d83611835565b9150612205826121c4565b602082019050919050565b60006020820190508181036000830152612229816121ed565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612264578082015181840152602081019050612249565b60008484015250505050565b600061227b82612230565b612285818561223b565b9350612295818560208601612246565b80840191505092915050565b60006122ad8284612270565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006122df826122b8565b6122e98185611835565b93506122f9818560208601612246565b612302816122c3565b840191505092915050565b6000602082019050818103600083015261232781846122d4565b90509291505056fea26469706673582212203fd9f8a3e032ec4b19f697b0490dff372f272862f8908a80ed32435e71c7cf0e64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c806362048031116100665780636204803114610131578063711853ab146101665780639d76ea58146101825780639dc809e1146101a0578063fde327be146101be5761009e565b8063379607f5146100a357806340e58ee5146100bf5780634e728486146100db578063590e1ae31461010b5780635918245a14610115575b600080fd5b6100bd60048036038101906100b89190611541565b6101da565b005b6100d960048036038101906100d49190611541565b610510565b005b6100f560048036038101906100f091906115cc565b6106b4565b604051610102919061161b565b60405180910390f35b6101136106d9565b005b61012f600480360381019061012a9190611676565b6106db565b005b61014b60048036038101906101469190611541565b610a1f565b60405161015d9695949392919061175e565b60405180910390f35b610180600480360381019061017b91906117bf565b610ab0565b005b61018a610dbc565b60405161019791906117ff565b60405180910390f35b6101a8610de0565b6040516101b5919061181a565b60405180910390f35b6101d860048036038101906101d391906117bf565b610e04565b005b6000600160008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027b90611892565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030d906118fe565b60405180910390fd5b806001015481600201541015610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103589061196a565b60405180910390fd5b428160030160089054906101000a900467ffffffffffffffff1667ffffffffffffffff16106103c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bc906119d6565b60405180910390fd5b6002808111156103d8576103d76116e7565b5b8160030160109054906101000a900460ff1660028111156103fc576103fb6116e7565b5b0361043c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043390611a42565b60405180910390fd5b60028160030160106101000a81548160ff02191690836002811115610464576104636116e7565b5b02179055506104b83382600201547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166111569092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f3ed1528b0fdc7c5207c1bf935e34a667e13656b9ed165260c522be0bc544f303838360020154604051610504929190611a62565b60405180910390a25050565b6000600160008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b190611892565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461064c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610643906118fe565b60405180910390fd5b60018160030160106101000a81548160ff02191690836002811115610674576106736116e7565b5b02179055507f8bf30e7ff26833413be5f69e1d373744864d600b664204b4a2f9844a8eedb9ed826040516106a8919061161b565b60405180910390a15050565b6002602052816000526040600020602052806000526040600020600091509150505481565b565b6000831161071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071590611ad7565b60405180910390fd5b428267ffffffffffffffff16101561076b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076290611b43565b60405180910390fd5b8167ffffffffffffffff168167ffffffffffffffff16116107c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b890611baf565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1682826107f89190611bfe565b67ffffffffffffffff161115610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a90611c86565b60405180910390fd5b61084d60006111dc565b600061085960006111f2565b90506040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001858152602001600081526020018467ffffffffffffffff1681526020018367ffffffffffffffff168152602001600060028111156108c3576108c26116e7565b5b8152506001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060808201518160030160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060a08201518160030160106101000a81548160ff021916908360028111156109bd576109bc6116e7565b5b02179055509050503373ffffffffffffffffffffffffffffffffffffffff167fbc4780dc990db2cd2aeac6bb493759184a77466e5e4478b010d230e98c76553e82868686604051610a119493929190611ca6565b60405180910390a250505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900467ffffffffffffffff16908060030160089054906101000a900467ffffffffffffffff16908060030160109054906101000a900460ff16905086565b60008111610af3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aea90611d37565b60405180910390fd5b6000600160008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9490611892565b60405180910390fd5b428160030160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1611610c01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf890611da3565b60405180910390fd5b60006002600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610c99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9090611e0f565b60405180910390fd5b82826002016000828254610cad9190611e2f565b92505081905550826002600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d149190611e2f565b92505081905550610d6633847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166111569092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f2eeeab891b26a214d1b25749f88a406bdea852bd8c9bfda977e0ef8114c180ba8585604051610dae929190611a62565b60405180910390a250505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008111610e47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3e90611eaf565b60405180910390fd5b6000600160008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610ef1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee890611892565b60405180910390fd5b60006002811115610f0557610f046116e7565b5b8160030160109054906101000a900460ff166002811115610f2957610f286116e7565b5b14610f69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6090611f1b565b60405180910390fd5b428160030160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161115610fce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc590611f87565b60405180910390fd5b428160030160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1611611032576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102990611da3565b60405180910390fd5b818160020160008282546110469190611fa7565b92505081905550816002600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110ad9190611fa7565b925050819055506111013330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611200909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f06bdb975df800a73232998e71ed585d536222f1dfeaa622d7f62a23ada686c828484604051611149929190611a62565b60405180910390a2505050565b6111d78363a9059cbb60e01b8484604051602401611175929190611fdb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611289565b505050565b6001816000016000828254019250508190555050565b600081600001549050919050565b611283846323b872dd60e01b85858560405160240161122193929190612004565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611289565b50505050565b60006112eb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113509092919063ffffffff16565b905060008151111561134b578080602001905181019061130b9190612073565b61134a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134190612112565b60405180910390fd5b5b505050565b606061135f8484600085611368565b90509392505050565b6060824710156113ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a4906121a4565b60405180910390fd5b6113b68561147c565b6113f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ec90612210565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161141e91906122a1565b60006040518083038185875af1925050503d806000811461145b576040519150601f19603f3d011682016040523d82523d6000602084013e611460565b606091505b509150915061147082828661149f565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156114af578290506114ff565b6000835111156114c25782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f6919061230d565b60405180910390fd5b9392505050565b600080fd5b6000819050919050565b61151e8161150b565b811461152957600080fd5b50565b60008135905061153b81611515565b92915050565b60006020828403121561155757611556611506565b5b60006115658482850161152c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115998261156e565b9050919050565b6115a98161158e565b81146115b457600080fd5b50565b6000813590506115c6816115a0565b92915050565b600080604083850312156115e3576115e2611506565b5b60006115f18582860161152c565b9250506020611602858286016115b7565b9150509250929050565b6116158161150b565b82525050565b6000602082019050611630600083018461160c565b92915050565b600067ffffffffffffffff82169050919050565b61165381611636565b811461165e57600080fd5b50565b6000813590506116708161164a565b92915050565b60008060006060848603121561168f5761168e611506565b5b600061169d8682870161152c565b93505060206116ae86828701611661565b92505060406116bf86828701611661565b9150509250925092565b6116d28161158e565b82525050565b6116e181611636565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110611727576117266116e7565b5b50565b600081905061173882611716565b919050565b60006117488261172a565b9050919050565b6117588161173d565b82525050565b600060c08201905061177360008301896116c9565b611780602083018861160c565b61178d604083018761160c565b61179a60608301866116d8565b6117a760808301856116d8565b6117b460a083018461174f565b979650505050505050565b600080604083850312156117d6576117d5611506565b5b60006117e48582860161152c565b92505060206117f58582860161152c565b9150509250929050565b600060208201905061181460008301846116c9565b92915050565b600060208201905061182f60008301846116d8565b92915050565b600082825260208201905092915050565b7f4e6f742065786973747300000000000000000000000000000000000000000000600082015250565b600061187c600a83611835565b915061188782611846565b602082019050919050565b600060208201905081810360008301526118ab8161186f565b9050919050565b7f4e6f742063726561746f72000000000000000000000000000000000000000000600082015250565b60006118e8600b83611835565b91506118f3826118b2565b602082019050919050565b60006020820190508181036000830152611917816118db565b9050919050565b7f476f616c206e6f74207265616368656400000000000000000000000000000000600082015250565b6000611954601083611835565b915061195f8261191e565b602082019050919050565b6000602082019050818103600083015261198381611947565b9050919050565b7f5374696c6c206163746976650000000000000000000000000000000000000000600082015250565b60006119c0600c83611835565b91506119cb8261198a565b602082019050919050565b600060208201905081810360008301526119ef816119b3565b9050919050565b7f416c726561647920636c61696d65640000000000000000000000000000000000600082015250565b6000611a2c600f83611835565b9150611a37826119f6565b602082019050919050565b60006020820190508181036000830152611a5b81611a1f565b9050919050565b6000604082019050611a77600083018561160c565b611a84602083018461160c565b9392505050565b7f476f616c206d7573742062652067742030000000000000000000000000000000600082015250565b6000611ac1601183611835565b9150611acc82611a8b565b602082019050919050565b60006020820190508181036000830152611af081611ab4565b9050919050565b7f5374617274206d75737420626520677465206e6f770000000000000000000000600082015250565b6000611b2d601583611835565b9150611b3882611af7565b602082019050919050565b60006020820190508181036000830152611b5c81611b20565b9050919050565b7f456e642064617465206d75737420626520677420737461727420646174650000600082015250565b6000611b99601e83611835565b9150611ba482611b63565b602082019050919050565b60006020820190508181036000830152611bc881611b8c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c0982611636565b9150611c1483611636565b9250828203905067ffffffffffffffff811115611c3457611c33611bcf565b5b92915050565b7f4475726174696f6e2065786365656473206d6178696d756d0000000000000000600082015250565b6000611c70601883611835565b9150611c7b82611c3a565b602082019050919050565b60006020820190508181036000830152611c9f81611c63565b9050919050565b6000608082019050611cbb600083018761160c565b611cc8602083018661160c565b611cd560408301856116d8565b611ce260608301846116d8565b95945050505050565b7f556e706c6564676520616d6f756e74206d757374206265206774203000000000600082015250565b6000611d21601c83611835565b9150611d2c82611ceb565b602082019050919050565b60006020820190508181036000830152611d5081611d14565b9050919050565b7f456e646564000000000000000000000000000000000000000000000000000000600082015250565b6000611d8d600583611835565b9150611d9882611d57565b602082019050919050565b60006020820190508181036000830152611dbc81611d80565b9050919050565b7f496e73756666696369656e742062616c616e636520746f20756e706c65646765600082015250565b6000611df9602083611835565b9150611e0482611dc3565b602082019050919050565b60006020820190508181036000830152611e2881611dec565b9050919050565b6000611e3a8261150b565b9150611e458361150b565b9250828203905081811115611e5d57611e5c611bcf565b5b92915050565b7f506c6564676520616d6f756e74206d7573742062652067742030000000000000600082015250565b6000611e99601a83611835565b9150611ea482611e63565b602082019050919050565b60006020820190508181036000830152611ec881611e8c565b9050919050565b7f496e76616c696420737461747573000000000000000000000000000000000000600082015250565b6000611f05600e83611835565b9150611f1082611ecf565b602082019050919050565b60006020820190508181036000830152611f3481611ef8565b9050919050565b7f4e6f742073746172746564000000000000000000000000000000000000000000600082015250565b6000611f71600b83611835565b9150611f7c82611f3b565b602082019050919050565b60006020820190508181036000830152611fa081611f64565b9050919050565b6000611fb28261150b565b9150611fbd8361150b565b9250828201905080821115611fd557611fd4611bcf565b5b92915050565b6000604082019050611ff060008301856116c9565b611ffd602083018461160c565b9392505050565b600060608201905061201960008301866116c9565b61202660208301856116c9565b612033604083018461160c565b949350505050565b60008115159050919050565b6120508161203b565b811461205b57600080fd5b50565b60008151905061206d81612047565b92915050565b60006020828403121561208957612088611506565b5b60006120978482850161205e565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006120fc602a83611835565b9150612107826120a0565b604082019050919050565b6000602082019050818103600083015261212b816120ef565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061218e602683611835565b915061219982612132565b604082019050919050565b600060208201905081810360008301526121bd81612181565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006121fa601d83611835565b9150612205826121c4565b602082019050919050565b60006020820190508181036000830152612229816121ed565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612264578082015181840152602081019050612249565b60008484015250505050565b600061227b82612230565b612285818561223b565b9350612295818560208601612246565b80840191505092915050565b60006122ad8284612270565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006122df826122b8565b6122e98185611835565b93506122f9818560208601612246565b612302816122c3565b840191505092915050565b6000602082019050818103600083015261232781846122d4565b90509291505056fea26469706673582212203fd9f8a3e032ec4b19f697b0490dff372f272862f8908a80ed32435e71c7cf0e64736f6c63430008110033",
  "devdoc": {
    "author": "@loopstudio",
    "details": "Contract that enables to raise funds using ERC20 tokens. campaigns pledged amount can be claimed if",
    "events": {
      "Cancel(uint256)": {
        "details": "Event emited when Campaign cancelation succeeds"
      },
      "Launch(uint256,uint256,address,uint64,uint64)": {
        "details": "Event emited when Campaign launch succeeds"
      }
    },
    "kind": "dev",
    "methods": {
      "cancel(uint256)": {
        "details": "Cancels a campaign, changing the status to Canceled and emits a Cancel event.",
        "params": {
          "_campaignId": "id of the campaign to cancel"
        }
      },
      "claim(uint256)": {
        "details": "Claims a campaign, changing the status to Claimed and emits a Claim event. Perform a safeTransfer to the campaing's creator.",
        "params": {
          "_campaignId": "id of the campaign to claim."
        }
      },
      "constructor": {
        "details": "Contract constructor",
        "params": {
          "_maxCampaignDurationInDays": "timestamp that represents the max duration for a campaign.",
          "_token": "ERC20 token address"
        }
      },
      "pledge(uint256,uint256)": {
        "params": {
          "_amount": "the amount to pledge",
          "_campaignId": "id of the campaign pledge"
        }
      },
      "unpledge(uint256,uint256)": {
        "details": "Unpledge contribution made to a campaign if not ended. Perform a SafeER20.transferFrom. Emit a Unpledge event if succeed.",
        "params": {
          "_amount": "the amount to unpledge",
          "_campaignId": "id of the campaign to unpledge"
        }
      }
    },
    "stateVariables": {
      "idCounter": {
        "details": "Counter for storage of campaign ids"
      },
      "idsToCampaigns": {
        "details": "Mapping that stores the campaigns by their id"
      },
      "idsToPledgedAmountByAddress": {
        "details": "Mapping that stores by campaingId, the amount pledged by address. Id -> pledger -> amount"
      },
      "maxCampaignDurationInDays": {
        "details": "timestamp = that represents the max duration for a campaign. I.e 60 days"
      },
      "tokenAddress": {
        "details": "Token must be ERC20 compliant"
      }
    },
    "title": "Crowdfunding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "cancel(uint256)": {
        "notice": "Cancels a campaign"
      },
      "claim(uint256)": {
        "notice": "Claims the campaign's pledged amount."
      },
      "tokenAddress()": {
        "notice": "Token address in which funds will be raised for each campaign"
      },
      "unpledge(uint256,uint256)": {
        "notice": "Unpledge contribution to campaign"
      }
    },
    "notice": "Contract for campaigns fundraising",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 845,
        "contract": "contracts/Crowdfunding.sol:Crowdfunding",
        "label": "idCounter",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Counter)695_storage"
      },
      {
        "astId": 851,
        "contract": "contracts/Crowdfunding.sol:Crowdfunding",
        "label": "idsToCampaigns",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Campaign)838_storage)"
      },
      {
        "astId": 858,
        "contract": "contracts/Crowdfunding.sol:Crowdfunding",
        "label": "idsToPledgedAmountByAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_enum(CampaignStatus)824": {
        "encoding": "inplace",
        "label": "enum Crowdfunding.CampaignStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(Campaign)838_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Crowdfunding.Campaign)",
        "numberOfBytes": "32",
        "value": "t_struct(Campaign)838_storage"
      },
      "t_struct(Campaign)838_storage": {
        "encoding": "inplace",
        "label": "struct Crowdfunding.Campaign",
        "members": [
          {
            "astId": 826,
            "contract": "contracts/Crowdfunding.sol:Crowdfunding",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 828,
            "contract": "contracts/Crowdfunding.sol:Crowdfunding",
            "label": "goalAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 830,
            "contract": "contracts/Crowdfunding.sol:Crowdfunding",
            "label": "pledgedAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 832,
            "contract": "contracts/Crowdfunding.sol:Crowdfunding",
            "label": "startDate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint64"
          },
          {
            "astId": 834,
            "contract": "contracts/Crowdfunding.sol:Crowdfunding",
            "label": "endDate",
            "offset": 8,
            "slot": "3",
            "type": "t_uint64"
          },
          {
            "astId": 837,
            "contract": "contracts/Crowdfunding.sol:Crowdfunding",
            "label": "status",
            "offset": 16,
            "slot": "3",
            "type": "t_enum(CampaignStatus)824"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Counter)695_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 694,
            "contract": "contracts/Crowdfunding.sol:Crowdfunding",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}