/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Greeter, GreeterInterface } from "../../contracts/Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017d7380380620017d78339818101604052810190620000379190620004d5565b620000576200004b620001a460201b60201c565b620001ac60201b60201c565b6200008b7fc3360ff9172bf9df3ba4d2c08d5f9024e5d0b13f5be352ec20683e4733114c3c60001b6200027060201b60201c565b620000bf7f23f4c397cd33234af583a56974b2af12606e844664c53a76cf7ae71270289f3960001b6200027060201b60201c565b620000f37f3e4a2b29c374a6f119f3f28ad04e75f4251511aaae0a28dc76d09bf72c8eb0e660001b6200027060201b60201c565b62000123604051806060016040528060228152602001620017b560229139826200027360201b620004541760201c565b620001577f572cd13d4cc71ae07cd9c37d844795e71db13008d0372cae2e2112c22bb7495c60001b6200027060201b60201c565b6200018b7f8f0c865fd3f4cc60d8db407cddff7e1d0bc139a4f6222d850d2219ee2ff2d19d60001b6200027060201b60201c565b80600190816200019c919062000771565b5050620008e5565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b6200031582826040516024016200028c929190620008aa565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200031960201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003ab8262000360565b810181811067ffffffffffffffff82111715620003cd57620003cc62000371565b5b80604052505050565b6000620003e262000342565b9050620003f08282620003a0565b919050565b600067ffffffffffffffff82111562000413576200041262000371565b5b6200041e8262000360565b9050602081019050919050565b60005b838110156200044b5780820151818401526020810190506200042e565b60008484015250505050565b60006200046e6200046884620003f5565b620003d6565b9050828152602081018484840111156200048d576200048c6200035b565b5b6200049a8482856200042b565b509392505050565b600082601f830112620004ba57620004b962000356565b5b8151620004cc84826020860162000457565b91505092915050565b600060208284031215620004ee57620004ed6200034c565b5b600082015167ffffffffffffffff8111156200050f576200050e62000351565b5b6200051d84828501620004a2565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200057957607f821691505b6020821081036200058f576200058e62000531565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005f97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005ba565b620006058683620005ba565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620006526200064c62000646846200061d565b62000627565b6200061d565b9050919050565b6000819050919050565b6200066e8362000631565b620006866200067d8262000659565b848454620005c7565b825550505050565b600090565b6200069d6200068e565b620006aa81848462000663565b505050565b5b81811015620006d257620006c660008262000693565b600181019050620006b0565b5050565b601f8211156200072157620006eb8162000595565b620006f684620005aa565b8101602085101562000706578190505b6200071e6200071585620005aa565b830182620006af565b50505b505050565b600082821c905092915050565b6000620007466000198460080262000726565b1980831691505092915050565b600062000761838362000733565b9150826002028217905092915050565b6200077c8262000526565b67ffffffffffffffff81111562000798576200079762000371565b5b620007a4825462000560565b620007b1828285620006d6565b600060209050601f831160018114620007e95760008415620007d4578287015190505b620007e0858262000753565b86555062000850565b601f198416620007f98662000595565b60005b828110156200082357848901518255600182019150602085019450602081019050620007fc565b868310156200084357848901516200083f601f89168262000733565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b6000620008768262000526565b62000882818562000858565b9350620008948185602086016200042b565b6200089f8162000360565b840191505092915050565b60006040820190508181036000830152620008c6818562000869565b90508181036020830152620008dc818462000869565b90509392505050565b610ec080620008f56000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063a413686214610084578063cfae3217146100a0578063f2fde38b146100be575b600080fd5b6100646100da565b005b61006e6100ee565b60405161007b9190610746565b60405180910390f35b61009e600480360381019061009991906108bb565b610117565b005b6100a86102bb565b6040516100b59190610983565b60405180910390f35b6100d860048036038101906100d391906109d1565b6103d1565b005b6100e26104f0565b6100ec600061056e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61011f6104f0565b61014b7fbb108f17d1648a457961451377353e5e3276785744e1c340185f0b7b96bc655b60001b610632565b6101777f06add364babdfd7f7a2e42c37a6e2ca0bd00f49dd356382bf4458e3a1bb152d960001b610632565b6101a37f7c9492ffdf12209c28a84100049d14a16682981244de786cdda1ab1cfdcc8d5d60001b610632565b610250604051806060016040528060238152602001610e6860239139600180546101cc90610a2d565b80601f01602080910402602001604051908101604052809291908181526020018280546101f890610a2d565b80156102455780601f1061021a57610100808354040283529160200191610245565b820191906000526020600020905b81548152906001019060200180831161022857829003601f168201915b505050505083610635565b61027c7fdf37d687a195dc8a49f09c8e88e4ac02d512a0a828b076b631a02313ba4e8bc260001b610632565b6102a87f5fa2abd5b7c9bd7836b24d334725bae48d0f9369c87a03e29b044434bfb34e0f60001b610632565b80600190816102b79190610c14565b5050565b60606102e97f9a7922d4eaf4992e197ad8b55f3b0de5d1740b9a15111271b516fa1975c7d4ca60001b610632565b6103157f70249098c3751dd573fc22f4430ed2823707b57c589fbcca02ab06d5c4181d2160001b610632565b6103417f185b2048bbc829f2d9bad6db0f53f7a6636ff1f29d61e6d6eb0199ad1e6f64c960001b610632565b6001805461034e90610a2d565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90610a2d565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6103d96104f0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610448576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043f90610d58565b60405180910390fd5b6104518161056e565b50565b6104ec828260405160240161046a929190610d78565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106d4565b5050565b6104f86106fd565b73ffffffffffffffffffffffffffffffffffffffff166105166100ee565b73ffffffffffffffffffffffffffffffffffffffff161461056c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056390610dfb565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b6106cf83838360405160240161064d93929190610e1b565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106d4565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061073082610705565b9050919050565b61074081610725565b82525050565b600060208201905061075b6000830184610737565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107c88261077f565b810181811067ffffffffffffffff821117156107e7576107e6610790565b5b80604052505050565b60006107fa610761565b905061080682826107bf565b919050565b600067ffffffffffffffff82111561082657610825610790565b5b61082f8261077f565b9050602081019050919050565b82818337600083830152505050565b600061085e6108598461080b565b6107f0565b90508281526020810184848401111561087a5761087961077a565b5b61088584828561083c565b509392505050565b600082601f8301126108a2576108a1610775565b5b81356108b284826020860161084b565b91505092915050565b6000602082840312156108d1576108d061076b565b5b600082013567ffffffffffffffff8111156108ef576108ee610770565b5b6108fb8482850161088d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561093e578082015181840152602081019050610923565b60008484015250505050565b600061095582610904565b61095f818561090f565b935061096f818560208601610920565b6109788161077f565b840191505092915050565b6000602082019050818103600083015261099d818461094a565b905092915050565b6109ae81610725565b81146109b957600080fd5b50565b6000813590506109cb816109a5565b92915050565b6000602082840312156109e7576109e661076b565b5b60006109f5848285016109bc565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a4557607f821691505b602082108103610a5857610a576109fe565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610ac07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a83565b610aca8683610a83565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000610b11610b0c610b0784610ae2565b610aec565b610ae2565b9050919050565b6000819050919050565b610b2b83610af6565b610b3f610b3782610b18565b848454610a90565b825550505050565b600090565b610b54610b47565b610b5f818484610b22565b505050565b5b81811015610b8357610b78600082610b4c565b600181019050610b65565b5050565b601f821115610bc857610b9981610a5e565b610ba284610a73565b81016020851015610bb1578190505b610bc5610bbd85610a73565b830182610b64565b50505b505050565b600082821c905092915050565b6000610beb60001984600802610bcd565b1980831691505092915050565b6000610c048383610bda565b9150826002028217905092915050565b610c1d82610904565b67ffffffffffffffff811115610c3657610c35610790565b5b610c408254610a2d565b610c4b828285610b87565b600060209050601f831160018114610c7e5760008415610c6c578287015190505b610c768582610bf8565b865550610cde565b601f198416610c8c86610a5e565b60005b82811015610cb457848901518255600182019150602085019450602081019050610c8f565b86831015610cd15784890151610ccd601f891682610bda565b8355505b6001600288020188555050505b505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d4260268361090f565b9150610d4d82610ce6565b604082019050919050565b60006020820190508181036000830152610d7181610d35565b9050919050565b60006040820190508181036000830152610d92818561094a565b90508181036020830152610da6818461094a565b90509392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610de560208361090f565b9150610df082610daf565b602082019050919050565b60006020820190508181036000830152610e1481610dd8565b9050919050565b60006060820190508181036000830152610e35818661094a565b90508181036020830152610e49818561094a565b90508181036040830152610e5d818461094a565b905094935050505056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a264697066735822122012ebcdfe916158f092350762a07cbecd5f70b544e6bbb160a8eb1a542d446fdc64736f6c634300081100334465706c6f79696e67206120477265657465722077697468206772656574696e673a";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _greeting: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  override getDeployTransaction(
    _greeting: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  override attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  override connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
