/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Greeter, GreeterInterface } from "../../contracts/Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200156d3803806200156d8339818101604052810190620000379190620003ce565b620000576200004b620000a060201b60201c565b620000a860201b60201c565b620000876040518060600160405280602281526020016200154b60229139826200016c60201b620002f41760201c565b80600190816200009891906200066a565b5050620007de565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6200020e828260405160240162000185929190620007a3565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200021260201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002a48262000259565b810181811067ffffffffffffffff82111715620002c657620002c56200026a565b5b80604052505050565b6000620002db6200023b565b9050620002e9828262000299565b919050565b600067ffffffffffffffff8211156200030c576200030b6200026a565b5b620003178262000259565b9050602081019050919050565b60005b838110156200034457808201518184015260208101905062000327565b60008484015250505050565b6000620003676200036184620002ee565b620002cf565b90508281526020810184848401111562000386576200038562000254565b5b6200039384828562000324565b509392505050565b600082601f830112620003b357620003b26200024f565b5b8151620003c584826020860162000350565b91505092915050565b600060208284031215620003e757620003e662000245565b5b600082015167ffffffffffffffff8111156200040857620004076200024a565b5b62000416848285016200039b565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200047257607f821691505b6020821081036200048857620004876200042a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004f27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004b3565b620004fe8683620004b3565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200054b620005456200053f8462000516565b62000520565b62000516565b9050919050565b6000819050919050565b62000567836200052a565b6200057f620005768262000552565b848454620004c0565b825550505050565b600090565b6200059662000587565b620005a38184846200055c565b505050565b5b81811015620005cb57620005bf6000826200058c565b600181019050620005a9565b5050565b601f8211156200061a57620005e4816200048e565b620005ef84620004a3565b81016020851015620005ff578190505b620006176200060e85620004a3565b830182620005a8565b50505b505050565b600082821c905092915050565b60006200063f600019846008026200061f565b1980831691505092915050565b60006200065a83836200062c565b9150826002028217905092915050565b62000675826200041f565b67ffffffffffffffff8111156200069157620006906200026a565b5b6200069d825462000459565b620006aa828285620005cf565b600060209050601f831160018114620006e25760008415620006cd578287015190505b620006d985826200064c565b86555062000749565b601f198416620006f2866200048e565b60005b828110156200071c57848901518255600182019150602085019450602081019050620006f5565b868310156200073c578489015162000738601f8916826200062c565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b60006200076f826200041f565b6200077b818562000751565b93506200078d81856020860162000324565b620007988162000259565b840191505092915050565b60006040820190508181036000830152620007bf818562000762565b90508181036020830152620007d5818462000762565b90509392505050565b610d5d80620007ee6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063a413686214610084578063cfae3217146100a0578063f2fde38b146100be575b600080fd5b6100646100da565b005b61006e6100ee565b60405161007b91906105e3565b60405180910390f35b61009e60048036038101906100999190610758565b610117565b005b6100a86101df565b6040516100b59190610820565b60405180910390f35b6100d860048036038101906100d3919061086e565b610271565b005b6100e2610390565b6100ec600061040e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61011f610390565b6101cc604051806060016040528060238152602001610d056023913960018054610148906108ca565b80601f0160208091040260200160405190810160405280929190818152602001828054610174906108ca565b80156101c15780601f10610196576101008083540402835291602001916101c1565b820191906000526020600020905b8154815290600101906020018083116101a457829003601f168201915b5050505050836104d2565b80600190816101db9190610ab1565b5050565b6060600180546101ee906108ca565b80601f016020809104026020016040519081016040528092919081815260200182805461021a906108ca565b80156102675780601f1061023c57610100808354040283529160200191610267565b820191906000526020600020905b81548152906001019060200180831161024a57829003601f168201915b5050505050905090565b610279610390565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102df90610bf5565b60405180910390fd5b6102f18161040e565b50565b61038c828260405160240161030a929190610c15565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610571565b5050565b61039861059a565b73ffffffffffffffffffffffffffffffffffffffff166103b66100ee565b73ffffffffffffffffffffffffffffffffffffffff161461040c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040390610c98565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61056c8383836040516024016104ea93929190610cb8565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610571565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105cd826105a2565b9050919050565b6105dd816105c2565b82525050565b60006020820190506105f860008301846105d4565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106658261061c565b810181811067ffffffffffffffff821117156106845761068361062d565b5b80604052505050565b60006106976105fe565b90506106a3828261065c565b919050565b600067ffffffffffffffff8211156106c3576106c261062d565b5b6106cc8261061c565b9050602081019050919050565b82818337600083830152505050565b60006106fb6106f6846106a8565b61068d565b90508281526020810184848401111561071757610716610617565b5b6107228482856106d9565b509392505050565b600082601f83011261073f5761073e610612565b5b813561074f8482602086016106e8565b91505092915050565b60006020828403121561076e5761076d610608565b5b600082013567ffffffffffffffff81111561078c5761078b61060d565b5b6107988482850161072a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107db5780820151818401526020810190506107c0565b60008484015250505050565b60006107f2826107a1565b6107fc81856107ac565b935061080c8185602086016107bd565b6108158161061c565b840191505092915050565b6000602082019050818103600083015261083a81846107e7565b905092915050565b61084b816105c2565b811461085657600080fd5b50565b60008135905061086881610842565b92915050565b60006020828403121561088457610883610608565b5b600061089284828501610859565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806108e257607f821691505b6020821081036108f5576108f461089b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261095d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610920565b6109678683610920565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006109ae6109a96109a48461097f565b610989565b61097f565b9050919050565b6000819050919050565b6109c883610993565b6109dc6109d4826109b5565b84845461092d565b825550505050565b600090565b6109f16109e4565b6109fc8184846109bf565b505050565b5b81811015610a2057610a156000826109e9565b600181019050610a02565b5050565b601f821115610a6557610a36816108fb565b610a3f84610910565b81016020851015610a4e578190505b610a62610a5a85610910565b830182610a01565b50505b505050565b600082821c905092915050565b6000610a8860001984600802610a6a565b1980831691505092915050565b6000610aa18383610a77565b9150826002028217905092915050565b610aba826107a1565b67ffffffffffffffff811115610ad357610ad261062d565b5b610add82546108ca565b610ae8828285610a24565b600060209050601f831160018114610b1b5760008415610b09578287015190505b610b138582610a95565b865550610b7b565b601f198416610b29866108fb565b60005b82811015610b5157848901518255600182019150602085019450602081019050610b2c565b86831015610b6e5784890151610b6a601f891682610a77565b8355505b6001600288020188555050505b505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610bdf6026836107ac565b9150610bea82610b83565b604082019050919050565b60006020820190508181036000830152610c0e81610bd2565b9050919050565b60006040820190508181036000830152610c2f81856107e7565b90508181036020830152610c4381846107e7565b90509392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c826020836107ac565b9150610c8d82610c4c565b602082019050919050565b60006020820190508181036000830152610cb181610c75565b9050919050565b60006060820190508181036000830152610cd281866107e7565b90508181036020830152610ce681856107e7565b90508181036040830152610cfa81846107e7565b905094935050505056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a264697066735822122089a70b621fac7b85033a4f1de61d70ab01b4eeb0a8c62859458f83c18ef7f71764736f6c634300081100334465706c6f79696e67206120477265657465722077697468206772656574696e673a";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _greeting: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  override getDeployTransaction(
    _greeting: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  override attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  override connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
