/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Crowdfunding,
  CrowdfundingInterface,
} from "../../contracts/Crowdfunding";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_maxCampaignDurationInDays",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Cancel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "goal",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "endDate",
        type: "uint64",
      },
    ],
    name: "Launch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Pledge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Refund",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_campaignId",
        type: "uint256",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "idsToCampaigns",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "goalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pledgedAmount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "endDate",
        type: "uint64",
      },
      {
        internalType: "enum Crowdfunding.CampaignStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_goalAmount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_startDate",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_endDate",
        type: "uint64",
      },
    ],
    name: "launch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCampaignDurationInDays",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pledge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpledge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200112038038062001120833981810160405281019062000037919062000200565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000a9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a090620002a8565b60405180910390fd5b60008167ffffffffffffffff1611620000f9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000f0906200031a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508067ffffffffffffffff1660a08167ffffffffffffffff168152505050506200033c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001838262000156565b9050919050565b620001958162000176565b8114620001a157600080fd5b50565b600081519050620001b5816200018a565b92915050565b600067ffffffffffffffff82169050919050565b620001da81620001bb565b8114620001e657600080fd5b50565b600081519050620001fa81620001cf565b92915050565b600080604083850312156200021a576200021962000151565b5b60006200022a85828601620001a4565b92505060206200023d85828601620001e9565b9150509250929050565b600082825260208201905092915050565b7f455243323020616464726573732063616e6e6f74206265207a65726f00000000600082015250565b600062000290601c8362000247565b91506200029d8262000258565b602082019050919050565b60006020820190508181036000830152620002c38162000281565b9050919050565b7f4475726174696f6e206d757374206265206774207468616e207a65726f000000600082015250565b600062000302601d8362000247565b91506200030f82620002ca565b602082019050919050565b600060208201905081810360008301526200033581620002f3565b9050919050565b60805160a051610db762000369600039600081816103fb01526106ec015260006107100152610db76000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80635918245a116100665780635918245a146100d257806362048031146100ee57806388ffe867146101235780639dc809e11461012d578063fc0c546a1461014b57610093565b80633edd2d201461009857806340e58ee5146100a25780634e71d92d146100be578063590e1ae3146100c8575b600080fd5b6100a0610169565b005b6100bc60048036038101906100b79190610791565b61016b565b005b6100c661030f565b005b6100d0610311565b005b6100ec60048036038101906100e791906107fe565b610313565b005b61010860048036038101906101039190610791565b610657565b60405161011a96959493929190610927565b60405180910390f35b61012b6106e8565b005b6101356106ea565b6040516101429190610988565b60405180910390f35b61015361070e565b6040516101609190610a02565b60405180910390f35b565b6000600160008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610215576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020c90610a7a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029e90610ae6565b60405180910390fd5b60018160030160106101000a81548160ff021916908360028111156102cf576102ce6108b0565b5b02179055507f8bf30e7ff26833413be5f69e1d373744864d600b664204b4a2f9844a8eedb9ed826040516103039190610b06565b60405180910390a15050565b565b565b60008311610356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034d90610b6d565b60405180910390fd5b428267ffffffffffffffff1610156103a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039a90610bd9565b60405180910390fd5b8167ffffffffffffffff168167ffffffffffffffff16116103f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f090610c45565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1682826104309190610c94565b67ffffffffffffffff16111561047b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047290610d1c565b60405180910390fd5b6104856000610732565b60006104916000610748565b90506040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001858152602001600081526020018467ffffffffffffffff1681526020018367ffffffffffffffff168152602001600060028111156104fb576104fa6108b0565b5b8152506001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060808201518160030160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060a08201518160030160106101000a81548160ff021916908360028111156105f5576105f46108b0565b5b02179055509050503373ffffffffffffffffffffffffffffffffffffffff167fbc4780dc990db2cd2aeac6bb493759184a77466e5e4478b010d230e98c76553e828686866040516106499493929190610d3c565b60405180910390a250505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900467ffffffffffffffff16908060030160089054906101000a900467ffffffffffffffff16908060030160109054906101000a900460ff16905086565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001816000016000828254019250508190555050565b600081600001549050919050565b600080fd5b6000819050919050565b61076e8161075b565b811461077957600080fd5b50565b60008135905061078b81610765565b92915050565b6000602082840312156107a7576107a6610756565b5b60006107b58482850161077c565b91505092915050565b600067ffffffffffffffff82169050919050565b6107db816107be565b81146107e657600080fd5b50565b6000813590506107f8816107d2565b92915050565b60008060006060848603121561081757610816610756565b5b60006108258682870161077c565b9350506020610836868287016107e9565b9250506040610847868287016107e9565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061087c82610851565b9050919050565b61088c81610871565b82525050565b61089b8161075b565b82525050565b6108aa816107be565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106108f0576108ef6108b0565b5b50565b6000819050610901826108df565b919050565b6000610911826108f3565b9050919050565b61092181610906565b82525050565b600060c08201905061093c6000830189610883565b6109496020830188610892565b6109566040830187610892565b61096360608301866108a1565b61097060808301856108a1565b61097d60a0830184610918565b979650505050505050565b600060208201905061099d60008301846108a1565b92915050565b6000819050919050565b60006109c86109c36109be84610851565b6109a3565b610851565b9050919050565b60006109da826109ad565b9050919050565b60006109ec826109cf565b9050919050565b6109fc816109e1565b82525050565b6000602082019050610a1760008301846109f3565b92915050565b600082825260208201905092915050565b7f4e6f742065786973747300000000000000000000000000000000000000000000600082015250565b6000610a64600a83610a1d565b9150610a6f82610a2e565b602082019050919050565b60006020820190508181036000830152610a9381610a57565b9050919050565b7f4e6f742063726561746f72000000000000000000000000000000000000000000600082015250565b6000610ad0600b83610a1d565b9150610adb82610a9a565b602082019050919050565b60006020820190508181036000830152610aff81610ac3565b9050919050565b6000602082019050610b1b6000830184610892565b92915050565b7f476f616c206d7573742062652067742030000000000000000000000000000000600082015250565b6000610b57601183610a1d565b9150610b6282610b21565b602082019050919050565b60006020820190508181036000830152610b8681610b4a565b9050919050565b7f5374617274206d75737420626520677465206e6f770000000000000000000000600082015250565b6000610bc3601583610a1d565b9150610bce82610b8d565b602082019050919050565b60006020820190508181036000830152610bf281610bb6565b9050919050565b7f456e642064617465206d75737420626520677420737461727420646174650000600082015250565b6000610c2f601e83610a1d565b9150610c3a82610bf9565b602082019050919050565b60006020820190508181036000830152610c5e81610c22565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c9f826107be565b9150610caa836107be565b9250828203905067ffffffffffffffff811115610cca57610cc9610c65565b5b92915050565b7f4475726174696f6e2065786365656473206d6178696d756d0000000000000000600082015250565b6000610d06601883610a1d565b9150610d1182610cd0565b602082019050919050565b60006020820190508181036000830152610d3581610cf9565b9050919050565b6000608082019050610d516000830187610892565b610d5e6020830186610892565b610d6b60408301856108a1565b610d7860608301846108a1565b9594505050505056fea264697066735822122009af41c123ff619ded19c54ee63dd435b312d64088b0c6951950f37e6d7a414664736f6c63430008110033";

type CrowdfundingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrowdfundingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Crowdfunding__factory extends ContractFactory {
  constructor(...args: CrowdfundingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _maxCampaignDurationInDays: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Crowdfunding> {
    return super.deploy(
      _token,
      _maxCampaignDurationInDays,
      overrides || {}
    ) as Promise<Crowdfunding>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _maxCampaignDurationInDays: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _maxCampaignDurationInDays,
      overrides || {}
    );
  }
  override attach(address: string): Crowdfunding {
    return super.attach(address) as Crowdfunding;
  }
  override connect(signer: Signer): Crowdfunding__factory {
    return super.connect(signer) as Crowdfunding__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdfundingInterface {
    return new utils.Interface(_abi) as CrowdfundingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Crowdfunding {
    return new Contract(address, _abi, signerOrProvider) as Crowdfunding;
  }
}
