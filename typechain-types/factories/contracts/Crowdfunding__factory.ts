/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Crowdfunding,
  CrowdfundingInterface,
} from "../../contracts/Crowdfunding";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_maxCampaignDurationInDays",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Cancel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "goal",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "endDate",
        type: "uint64",
      },
    ],
    name: "Launch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Pledge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Refund",
    type: "event",
  },
  {
    inputs: [],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "idsToCampaigns",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "goalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pledgedAmount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "endDate",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_goalAmount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_startDate",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_endDate",
        type: "uint64",
      },
    ],
    name: "launch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCampaignDurationInDays",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162000df838038062000df8833981810160405281019062000037919062000200565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000a9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a090620002a8565b60405180910390fd5b60008167ffffffffffffffff1611620000f9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000f09062000340565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508067ffffffffffffffff1660a08167ffffffffffffffff1681525050505062000362565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001838262000156565b9050919050565b620001958162000176565b8114620001a157600080fd5b50565b600081519050620001b5816200018a565b92915050565b600067ffffffffffffffff82169050919050565b620001da81620001bb565b8114620001e657600080fd5b50565b600081519050620001fa81620001cf565b92915050565b600080604083850312156200021a576200021962000151565b5b60006200022a85828601620001a4565b92505060206200023d85828601620001e9565b9150509250929050565b600082825260208201905092915050565b7f455243323020616464726573732063616e6e6f74206265207a65726f00000000600082015250565b600062000290601c8362000247565b91506200029d8262000258565b602082019050919050565b60006020820190508181036000830152620002c38162000281565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e207a6560008201527f726f000000000000000000000000000000000000000000000000000000000000602082015250565b60006200032860228362000247565b91506200033582620002ca565b604082019050919050565b600060208201905081810360008301526200035b8162000319565b9050919050565b60805160a051610a696200038f6000396000818161021901526104eb015260006105110152610a696000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063620480311161005b57806362048031146100b25780639dc809e1146100e7578063ea8a1af014610105578063fc0c546a1461010f5761007d565b80634e71d92d14610082578063590e1ae31461008c5780635918245a14610096575b600080fd5b61008a61012d565b005b61009461012f565b005b6100b060048036038101906100ab91906105d2565b610131565b005b6100cc60048036038101906100c79190610625565b610458565b6040516100de969594939291906106cc565b60405180910390f35b6100ef6104e9565b6040516100fc919061072d565b60405180910390f35b61010d61050d565b005b61011761050f565b60405161012491906107a7565b60405180910390f35b565b565b60008311610174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016b9061081f565b60405180910390fd5b428267ffffffffffffffff1610156101c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b89061088b565b60405180910390fd5b8167ffffffffffffffff168167ffffffffffffffff1611610217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020e906108f7565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16828261024e9190610946565b67ffffffffffffffff161115610299576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610290906109ce565b60405180910390fd5b6102a36000610533565b6040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001600081526020018367ffffffffffffffff1681526020018267ffffffffffffffff168152602001600015158152506001600061030c6000610549565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060808201518160030160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060a08201518160030160106101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167fbc4780dc990db2cd2aeac6bb493759184a77466e5e4478b010d230e98c76553e6104386000610549565b85858560405161044b94939291906109ee565b60405180910390a2505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900467ffffffffffffffff16908060030160089054906101000a900467ffffffffffffffff16908060030160109054906101000a900460ff16905086565b7f000000000000000000000000000000000000000000000000000000000000000081565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001816000016000828254019250508190555050565b600081600001549050919050565b600080fd5b6000819050919050565b61056f8161055c565b811461057a57600080fd5b50565b60008135905061058c81610566565b92915050565b600067ffffffffffffffff82169050919050565b6105af81610592565b81146105ba57600080fd5b50565b6000813590506105cc816105a6565b92915050565b6000806000606084860312156105eb576105ea610557565b5b60006105f98682870161057d565b935050602061060a868287016105bd565b925050604061061b868287016105bd565b9150509250925092565b60006020828403121561063b5761063a610557565b5b60006106498482850161057d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061067d82610652565b9050919050565b61068d81610672565b82525050565b61069c8161055c565b82525050565b6106ab81610592565b82525050565b60008115159050919050565b6106c6816106b1565b82525050565b600060c0820190506106e16000830189610684565b6106ee6020830188610693565b6106fb6040830187610693565b61070860608301866106a2565b61071560808301856106a2565b61072260a08301846106bd565b979650505050505050565b600060208201905061074260008301846106a2565b92915050565b6000819050919050565b600061076d61076861076384610652565b610748565b610652565b9050919050565b600061077f82610752565b9050919050565b600061079182610774565b9050919050565b6107a181610786565b82525050565b60006020820190506107bc6000830184610798565b92915050565b600082825260208201905092915050565b7f476f616c206d7573742062652067742030000000000000000000000000000000600082015250565b60006108096011836107c2565b9150610814826107d3565b602082019050919050565b60006020820190508181036000830152610838816107fc565b9050919050565b7f5374617274206d75737420626520677465206e6f770000000000000000000000600082015250565b60006108756015836107c2565b91506108808261083f565b602082019050919050565b600060208201905081810360008301526108a481610868565b9050919050565b7f456e642064617465206d75737420626520677420737461727420646174650000600082015250565b60006108e1601e836107c2565b91506108ec826108ab565b602082019050919050565b60006020820190508181036000830152610910816108d4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061095182610592565b915061095c83610592565b9250828203905067ffffffffffffffff81111561097c5761097b610917565b5b92915050565b7f4475726174696f6e2065786365656473206d6178696d756d0000000000000000600082015250565b60006109b86018836107c2565b91506109c382610982565b602082019050919050565b600060208201905081810360008301526109e7816109ab565b9050919050565b6000608082019050610a036000830187610693565b610a106020830186610693565b610a1d60408301856106a2565b610a2a60608301846106a2565b9594505050505056fea264697066735822122096267cbb9e7e5fa1df5a4637f0bd2763cbcaf9d203cd7094f1ede4f304ca75ef64736f6c63430008110033";

type CrowdfundingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrowdfundingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Crowdfunding__factory extends ContractFactory {
  constructor(...args: CrowdfundingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _maxCampaignDurationInDays: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Crowdfunding> {
    return super.deploy(
      _token,
      _maxCampaignDurationInDays,
      overrides || {}
    ) as Promise<Crowdfunding>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _maxCampaignDurationInDays: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _maxCampaignDurationInDays,
      overrides || {}
    );
  }
  override attach(address: string): Crowdfunding {
    return super.attach(address) as Crowdfunding;
  }
  override connect(signer: Signer): Crowdfunding__factory {
    return super.connect(signer) as Crowdfunding__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdfundingInterface {
    return new utils.Interface(_abi) as CrowdfundingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Crowdfunding {
    return new Contract(address, _abi, signerOrProvider) as Crowdfunding;
  }
}
